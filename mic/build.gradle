plugins {
    id 'java'
    id 'de.undercouch.download' version '4.1.2'
}

sourceSets {
    main {
        java {
            srcDirs = ['src']
        }
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://vassalengine.org/maven/'
    }
}

compileJava {
    options.release = 11
}

configurations {
    implementation.extendsFrom bundle
}

dependencies {
    // These depes (and their deps) must be bundled in the module
    // because they are not provided by Vassal
    bundle 'com.fasterxml.jackson.core:jackson-annotations:2.1.5'
    bundle 'com.fasterxml.jackson.core:jackson-databind:2.1.5'
    bundle 'com.google.guava:guava-jdk5:17.0'

    // These deps are provided by Vassal
    implementation 'org.vassalengine:vassal-app:3.6.7'
}

tasks.register('unpackVmod', Copy) {
    def outputDir = file("${buildDir}/swxwmg.vmod-unpacked")

    from zipTree(file('build/distributions/swxwmg.vmod'))
    exclude '**/*.class', 'META-INF/', 'com/google/**/*', 'com/fasterxml/**/*'
    includeEmptyDirs = false
    into outputDir
}

tasks.register('buildVmod', Zip) {
    archiveFileName.set('swxwmg.vmod')
    duplicatesStrategy 'exclude'
    from 'swxwmg.vmod-unpacked'
    from compileJava
    for (dependency in (configurations.bundle).files) {
        // Need to extract jars so vassal can find classes
        from zipTree(dependency)
    }
    exclude '**/*.jar'
    doLast {
        println "Compiled vmod at ${archivePath}"
    }
}
